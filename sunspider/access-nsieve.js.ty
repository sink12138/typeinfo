(fn _JS_F6<eval>__root 
  ; source ptr: 0x0, ln: 1
  ; arg count: 0
  (sig (args any  ; this
    )
  any)  ; return
  ; stack size: 2
  (locs  ; var count: 1
    any  ; <ret>: normal
  )
  (bytecodes 
    (  0 any)  ; check_define_var  "pad", 01000000
    (  6 any)  ; check_define_var  "nsieve", 01000000
    ( 12 any)  ; check_define_var  "sieve", 01000000
    ( 18 any)  ; check_define_var  "result", 00000000
    ( 24 any)  ; check_define_var  "expected", 00000000
    ( 30 any)  ; fclosure8  0
    ( 32 any)  ; define_func  "pad", 00000000
    ( 38 any)  ; fclosure8  1
    ( 40 any)  ; define_func  "nsieve", 00000000
    ( 46 any)  ; fclosure8  2
    ( 48 any)  ; define_func  "sieve", 00000000
    ( 54 any)  ; define_var  "result", 00000000
    ( 60 any)  ; define_var  "expected", 00000000
    ( 66 any)  ; get_var  "sieve"
    ( 71 any)  ; call0 
    ( 72 any)  ; put_var  "result"
    ( 77 any)  ; push_i16  14302
    ( 80 any)  ; put_var  "expected"
    ( 85 any)  ; undefined 
    ( 86 any)  ; put_loc0 
    ( 87 any)  ; get_var  "result"
    ( 92 any)  ; get_var  "expected"
    ( 97 any)  ; neq 
    ( 98 any)  ; if_false8  25
    (100 any)  ; push_atom_value  "ERROR:, bad, result:, expected, "
    (105 any)  ; get_var  "expected"
    (110 any)  ; add 
    (111 any)  ; push_atom_value  ", but, got, "
    (116 any)  ; add 
    (117 any)  ; get_var  "result"
    (122 any)  ; add 
    (123 any)  ; throw 
    (124 any)  ; get_loc0 
    (125 any)  ; return 
  )
  ; Constant pool
  ; length: 3
    ;   0: 
    ;   1: 
    ;   2: 
)

(fn _JS_F3pad__root.0 
  ; source ptr: 0x557247609240, ln: 6
  ; arg count: 2
  (sig (args any  ; this
      any  ; number
      any  ; width
    )
  any)  ; return
  ; stack size: 2
  (locs  ; var count: 3
    any  ; s: normal
    number  ; prefixWidth: normal
    number  ; i: normal
  )
  (bytecodes 
    (  0 any)  ; get_arg0 
    (  1 any)  ; get_field2  "toString"
    (  6 any)  ; call_method  0
    (  9 any)  ; put_loc0 
    ( 10 any)  ; get_arg1 
    ( 11 any)  ; get_loc0 
    ( 12 any)  ; get_length 
    ( 13 any)  ; sub 
    ( 14 any)  ; set_loc1 
    ( 15 any)  ; push_0 
    ( 16 any)  ; gt 
    ( 17 any)  ; if_false8  20
    ( 19 any)  ; push_1 
    ( 20 any)  ; put_loc2 
    ( 21 any)  ; get_loc2 
    ( 22 any)  ; get_loc1 
    ( 23 any)  ; lte 
    ( 24 any)  ; if_false8  13
    ( 26 any)  ; push_atom_value  ", "
    ( 31 any)  ; get_loc0 
    ( 32 any)  ; add 
    ( 33 any)  ; put_loc0 
    ( 34 any)  ; inc_loc  2
    ( 36 any)  ; goto8  -16
    ( 38 any)  ; get_loc0 
    ( 39 any)  ; return 
  )
  ; Constant pool
  ; length: 0
)

(fn _JS_F6nsieve__root.1 
  ; source ptr: 0x5572476138b0, ln: 15
  ; arg count: 2
  (sig (args any  ; this
      any  ; m
      any  ; isPrime
    )
  any)  ; return
  ; stack size: 3
  (locs  ; var count: 3
    any  ; i: normal
    any  ; k: normal
    any  ; count: normal
  )
  (bytecodes 
    (  0 any)  ; push_2 
    (  1 any)  ; put_loc0 
    (  2 any)  ; get_loc0 
    (  3 any)  ; get_arg0 
    (  4 any)  ; lte 
    (  5 any)  ; if_false8  9
    (  7 any)  ; get_arg1 
    (  8 any)  ; get_loc0 
    (  9 any)  ; push_true 
    ( 10 any)  ; put_array_el 
    ( 11 any)  ; inc_loc  0
    ( 13 any)  ; goto8  -12
    ( 15 any)  ; push_0 
    ( 16 any)  ; put_loc2 
    ( 17 any)  ; push_2 
    ( 18 any)  ; put_loc0 
    ( 19 any)  ; get_loc0 
    ( 20 any)  ; get_arg0 
    ( 21 any)  ; lte 
    ( 22 any)  ; if_false8  30
    ( 24 any)  ; get_arg1 
    ( 25 any)  ; get_loc0 
    ( 26 any)  ; get_array_el 
    ( 27 any)  ; if_false8  21
    ( 29 any)  ; get_loc0 
    ( 30 any)  ; get_loc0 
    ( 31 any)  ; add 
    ( 32 any)  ; put_loc1 
    ( 33 any)  ; get_loc1 
    ( 34 any)  ; get_arg0 
    ( 35 any)  ; lte 
    ( 36 any)  ; if_false8  10
    ( 38 any)  ; get_arg1 
    ( 39 any)  ; get_loc1 
    ( 40 any)  ; push_false 
    ( 41 any)  ; put_array_el 
    ( 42 any)  ; get_loc0 
    ( 43 any)  ; add_loc  1
    ( 45 any)  ; goto8  -13
    ( 47 any)  ; inc_loc  2
    ( 49 any)  ; inc_loc  0
    ( 51 any)  ; goto8  -33
    ( 53 any)  ; get_loc2 
    ( 54 any)  ; return 
  )
  ; Constant pool
  ; length: 0
)

(fn _JS_F5sieve__root.2 
  ; source ptr: 0x557247619d20, ln: 30
  ; arg count: 0
  (sig (args any  ; this
    )
  number)  ; return
  ; stack size: 4
  (locs  ; var count: 4
    number  ; sum: normal
    number  ; i: normal
    number  ; m: normal
    any[]  ; flags: normal
  )
  (bytecodes 
    (  0 any)  ; push_0 
    (  1 any)  ; put_loc0 
    (  2 any)  ; push_1 
    (  3 any)  ; put_loc1 
    (  4 any)  ; get_loc1 
    (  5 any)  ; push_3 
    (  6 any)  ; lte 
    (  7 any)  ; if_false8  34
    (  9 any)  ; push_1 
    ( 10 any)  ; get_loc1 
    ( 11 any)  ; shl 
    ( 12 any)  ; push_i16  10000
    ( 15 any)  ; mul 
    ( 16 any)  ; put_loc2 
    ( 17 any)  ; get_var  "Array"
    ( 22 any)  ; get_loc2 
    ( 23 any)  ; push_1 
    ( 24 any)  ; add 
    ( 25 any)  ; call1 
    ( 26 any)  ; put_loc3 
    ( 27 any)  ; get_loc0 
    ( 28 any)  ; get_var  "nsieve"
    ( 33 any)  ; get_loc2 
    ( 34 any)  ; get_loc3 
    ( 35 any)  ; call2 
    ( 36 any)  ; add 
    ( 37 any)  ; put_loc0 
    ( 38 any)  ; inc_loc  1
    ( 40 any)  ; goto8  -37
    ( 42 any)  ; get_loc0 
    ( 43 any)  ; return 
  )
  ; Constant pool
  ; length: 0
)

