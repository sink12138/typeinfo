(fn _JS_F6<eval>__0x56071a906760
  ; source ptr: 0x0, ln: 1
  ; arg count: 0
  (sig (args any  ; this
    )
  any)  ; return
  ; stack size: 1
  (locs  ; var count: 1
    any  ; <ret>: normal
  )
  (bytecodes 
    (  0 any)  ; check_define_var  'loop', 01000000
    (  6 any)  ; fclosure8  0
    (  8 any)  ; define_func  'loop', 00000000
    ( 14 any)  ; get_loc0
    ( 15 any)  ; return
  )
  ; Constant pool
  ; length: 1
    ;   0: 
)

(fn _JS_F4loop__e3b166707e7b51eb 
  ; source ptr: 0x5556f2ac8380, ln: 1
  ; arg count: 2
  (sig (args any  ; this
      i32  ; n 
      i32  ; seed 
    )
  i32)  ; return
  ; stack size: 2
  (locs  ; var count: 2
    i32  ; n: normal
    i32  ; seed: normal
  )
  (bytecodes 
    (  0 any)  ; set_loc_uninitialized  0
    (  3 i32)  ; get_arg1
    (  4 i32)  ; put_loc0
    (  5 any)  ; set_loc_uninitialized  1
    (  8 i32)  ; push_0
    (  9 i32)  ; put_loc1
    ( 10 i32)  ; get_loc_check  1
    ( 13 i32)  ; get_arg0
    ( 14 i32)  ; lt
    ( 15 i32)  ; if_false8  51
    ( 17 i32)  ; get_loc_check  0
    ( 20 i32)  ; push_i8  10
    ( 22 i32)  ; mul
    ( 23 i32)  ; dup
    ( 24 i32)  ; put_loc_check  0
    ( 27 i32)  ; drop
    ( 28 i32)  ; get_loc_check  0
    ( 31 i32)  ; push_i32  10000007
    ( 36 i32)  ; gt
    ( 37 i32)  ; if_false8  17
    ( 39 i32)  ; get_loc_check  0
    ( 42 i32)  ; push_i32  10000007
    ( 47 i32)  ; sub
    ( 48 i32)  ; dup
    ( 49 i32)  ; put_loc_check  0
    ( 52 i32)  ; drop
    ( 53 i32)  ; goto8  -26
    ( 55 i32)  ; get_loc_check  1
    ( 58 i32)  ; push_1
    ( 59 i32)  ; add
    ( 60 i32)  ; dup
    ( 61 i32)  ; put_loc_check  1
    ( 64 i32)  ; drop
    ( 65 i32)  ; goto8  -56
    ( 67 i32)  ; get_loc_check  0
    ( 70 i32)  ; return
  )
  ; Constant pool
  ; length: 0
)

